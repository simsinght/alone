{"version":3,"sources":["Components/Map/red-dot-n.png","Components/Map/red-dot-ne.png","Components/Map/red-dot-nw.png","Components/Map/red-dot-s.png","Components/Map/red-dot-se.png","Components/Map/red-dot-sw.png","Components/Map/red-dot-e.png","Components/Map/red-dot-w.png","title.png","redux/actionsTypes.js","redux/reducers/GMapReducer.js","redux/reducers/index.js","redux/sagas/GMapSaga.js","redux/store.js","redux/actions.js","Components/Map/GMap.js","Components/Map/index.js","Components/LeftColumn/LeftColumn.js","Components/LeftColumn/index.js","Components/TopControl/TopControl.js","Components/RightControl/RightControl.js","Components/TopControl/index.js","Components/RightControl/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","GET_POSITIONS_SUCCESS","initialState","looping","sliderValue","positions","day","hour","count","parity","combineReducers","GMap","state","action","type","payload","val","pollHour","watchPollHour","rootSaga","map","llat","llong","lat","lng","name","Math","floor","numToDay","0","1","2","3","4","5","6","timeToHour","hourToIndex","21","22","23","indexToHour","7","data","length","out","slice","split","put","i","j","k","delay","takeLatest","all","call","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","run","sagas","iter","startLoop","dirs","redDotN","redDotNE","redDotNW","redDotS","redDotSE","redDotSW","redDotE","redDotW","mapStyle","elementType","stylers","color","featureType","_mapLoaded","mapProps","setOptions","styles","showingInfoWindow","activeMarker","selectedPlace","selectedPed","onMarkerClick","props","marker","e","ped","setState","onClose","createMarker","lname","llng","dir","position","onClick","icon","url","scaledSize","width","height","anchor","x","y","key","createMarkers","markers","push","className","style","google","this","zoom","initialCenter","onReady","visible","time","Button","Component","GoogleApiWrapper","apiKey","connect","polling","dispatch","getPositions","pollPositions","LeftColumn","Grid","Column","paddingRight","verticalAlign","centered","continueTicking","Icon","Header","textAlign","marginBottom","Image","src","title","TopControl","Row","columns","inverted","paddingTop","Segment","Group","horizontal","marginTop","backgroundColor","RightControl","settings","start","min","max","step","onChange","value","setSliderValue","margin","borderLeft","borderRight","setSliderValueOnce","App","isTourOpen","closeTour","onDismiss","steps","isOpen","onRequestClose","selector","content","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.28983210.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/red-dot-n.2d2501fc.png\";","module.exports = __webpack_public_path__ + \"static/media/red-dot-ne.e9ccb056.png\";","module.exports = __webpack_public_path__ + \"static/media/red-dot-nw.3ad1de2f.png\";","module.exports = __webpack_public_path__ + \"static/media/red-dot-s.9109295a.png\";","module.exports = __webpack_public_path__ + \"static/media/red-dot-se.64bb45ff.png\";","module.exports = __webpack_public_path__ + \"static/media/red-dot-sw.cb8a09d1.png\";","module.exports = __webpack_public_path__ + \"static/media/red-dot-e.af94bbad.png\";","module.exports = __webpack_public_path__ + \"static/media/red-dot-w.f623980d.png\";","module.exports = __webpack_public_path__ + \"static/media/title.3adb37ac.png\";","export const GET_POSITIONS = \"GMAP_GET_POSITIONS\";\nexport const GET_POSITIONS_SUCCESS = \"GMAP_GET_POSITIONS_SUCCESS\";\nexport const GET_POSITIONS_ERROR = \"GMAP_GET_POSITIONS_ERROR\";\n\nexport const POLL_POSITIONS = \"GMAP_POLL_POSITIONS\";\n\nexport const LEFT_SET_TIME = \"LEFT_SET_TIME\"\n\nexport const GET_POSITIONS_HOUR = \"GMAP_GET_POSITIONS_HOUR\";\nexport const GET_POSITIONS_HOUR_SUCCESS = \"GMAP_GET_POSITIONS_HOUR_SUCCESS\";\nexport const GET_POSITIONS_HOUR_ERROR = \"GMAP_GET_POSITIONS_HOUR_ERROR\";\n\nexport const SET_SLIDER_VALUE = \"SET_SLIDER_VALUE\";\nexport const SET_SLIDER_VALUE_SUCCESS = \"SET_SLIDER_VALUE_SUCCESS\";\nexport const SET_SLIDER_VALUE_ERROR = \"SET_SLIDER_VALUE_ERROR\";\n\nexport const SET_SLIDER_VALUE_ONCE = \"SET_SLIDER_VALUE_ONCE\";\nexport const SET_SLIDER_VALUE_ONCE_SUCCESS = \"SET_SLIDER_VALUE_ONCE_SUCCESS\";\nexport const SET_SLIDER_VALUE_ONCE_ERROR = \"SET_SLIDER_VALUE_ONCE_ERROR\";\n\nexport const START_LOOP = \"START_LOOP\";\nexport const START_LOOP_SUCCESS = \"START_LOOP_SUCCESS\";\nexport const START_LOOP_ERROR = \"START_LOOP_ERROR\";\n","import { GET_POSITIONS_SUCCESS,\n         LEFT_SET_TIME,\n         SET_SLIDER_VALUE,\n         SET_SLIDER_VALUE_ONCE\n       } from \"../actionsTypes\";\n\nconst initialState = {\n  looping: false,\n  sliderValue: 0,\n  positions: [],\n  day: 'MONDAY',\n  hour: '12AM',\n  count: 0,\n  parity: true,\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case LEFT_SET_TIME:\n      //console.log(action.payload.day, action.payload.hour);\n      return {\n        ...state,\n        day: action.payload.day,\n        hour: action.payload.hour,\n        count: action.payload.count\n      }\n    case GET_POSITIONS_SUCCESS:\n      return {\n        ...state,\n        positions: action.payload.positions\n      };\n    case SET_SLIDER_VALUE:\n      //console.log('set slider value', action.payload.val);\n      return {\n        ...state,\n        sliderValue: action.payload.val,\n        looping: action.payload.looping,\n        parity: !state.parity\n      };\n    case SET_SLIDER_VALUE_ONCE:\n      //console.log('set slider value once', action.payload.val);\n      return {\n        ...state,\n        sliderValue: action.payload.val,\n        looping: action.payload.looping,\n        parity: !state.parity\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport GMap from \"./GMapReducer\";\n\nexport default combineReducers({ GMap });\n","import { all, call, delay, put, takeLatest } from 'redux-saga/effects';\nimport { GET_POSITIONS_SUCCESS,\n         LEFT_SET_TIME,\n         SET_SLIDER_VALUE_ONCE,\n         SET_SLIDER_VALUE\n       } from '../actionsTypes';\nimport axios from 'axios';\nimport data from './cleanData';\n\nlet points = [[32.71163629, -117.154756], [32.72084324, -117.1690626], [32.7097405, -117.1627473], [32.70130945, -117.0693071], [32.71978873, -117.1628183], [32.72576703, -117.1702165], [32.71163942, -117.1591283], [32.73150539, -117.1592884], [32.7115838, -117.1630017], [32.70793705, -117.1540471], [32.70931728, -117.1554569], [32.71632946, -117.1600229], [32.711879, -117.164817], [32.93620922, -117.2572871], [32.70948847, -117.1550563]];\nlet positions = points.map(([llat, llong]) => ({\n                              lat: llat,\n                              lng: llong,\n                              name: ' '+llat+llong\n                            }));\n\nexport function* pollPositionsWalker() {\n  let i = 0;\n  let j = 3;\n  while (true) {\n    const response  = yield call(\n      axios.get,\n      `http://localhost:5000/${i}/${j}`,\n      { 'headers': { 'Access-Control-Allow-Origin': '*', } }\n    );\n    //console.log(i, response.data);\n\n    yield put({type: GET_POSITIONS_SUCCESS, payload: {positions: response.data}});\n    yield delay(5000);\n    i = i + j;\n  }\n}\n\nexport function* pollPositions() {\n  yield put({type: GET_POSITIONS_SUCCESS, payload: {positions}});\n  yield delay(3000);\n}\n\nexport function* pollHours() {\n\n  //console.log('callPollHours')\n  let i=0, j=0, k=0;\n  let numToDay = {0:'MONDAY',1:'TUESDAY',2:'WEDNESDAY',\n                  3:'THURSDAY',4:'FRIDAY',5:'SATURDAY',6:'SUNDAY'}\n  let timeToHour = {'00': '12-1AM',\n                    '01': '1-2AM',\n                    '02': '2-3AM',\n                    '03': '3-4AM',\n                    '04': '4-5AM',\n                    '05': '5-6AM',\n                    '20': '8-9PM',\n                    '21': '9-10PM',\n                    '22': '10-11AM',\n                    '23': '11-12AM',\n                  }\n\n  for (i=0; i<data.length; i++) {\n    for (j=0; j<data[i].length; j++) {\n      let count = data[i][j].length\n      let hour = timeToHour[data[i][j][0]['time'][3].split(':')[0]]\n      yield put({ type: LEFT_SET_TIME,\n                  payload: {day: numToDay[i], hour, count} })\n      // 'name''lat''lng''dir'\n      for (k=0;k<1;k++) {\n        let out = data[i][j].slice(k, k+8)\n        yield put({type: GET_POSITIONS_SUCCESS, payload: {positions: out}});\n        yield delay(3000);\n      }\n    }\n  }\n}\n\nexport function* pollHour(action) {\n\n  //console.log('callPollHour');\n  if (action == null) {\n    //console.log('null action');\n    action = {payload: {val: 0, looping: false}}\n  }\n\n  let day = Math.floor(action.payload.val / 24);\n  let hour = action.payload.val % 24;\n\n  let numToDay = {0:'MONDAY',1:'TUESDAY',2:'WEDNESDAY', 3:'THURSDAY',\n                  4:'FRIDAY',5:'SATURDAY',6:'SUNDAY'};\n  let timeToHour = {'00': '12-1AM', '01': '1-2AM', '02': '2-3AM',\n                    '03': '3-4AM', '04': '4-5AM', '05': '5-6AM',\n                    '20': '8-9PM', '21': '9-10PM', '22': '10-11AM',\n                    '23': '11-12AM', };\n  let hourToIndex = {0:0, 1:1, 2:2, 3:3, 4:4, 21:5, 22:6, 23:7};\n  let indexToHour = {0:0, 1:1, 2:2, 3:3, 4:4, 5:21, 6:22, 7:23};\n\n  if (!action.payload.looping) {\n    //console.log(\"not looping\", day, hour);\n    let count = data[day][hourToIndex[hour]].length;\n    //console.log('count', count);\n    let out = data[day][hourToIndex[hour]].slice(0,8);\n    //console.log('out', hour);\n    hour = timeToHour[out[0]['time'][3].split(':')[0]];\n    //console.log('hour', hour);\n    yield put({type: GET_POSITIONS_SUCCESS, payload: {positions: out}});\n    yield put({ type: LEFT_SET_TIME, payload: {day: numToDay[day], hour, count} });\n    return;\n  }\n\n  let i=day, j=hourToIndex[hour], k=0;\n  for (; i<data.length; i++) {\n    for (; j<data[i].length; j++) {\n      let count = data[i][j].length\n      let hour = timeToHour[data[i][j][0]['time'][3].split(':')[0]]\n      yield put({ type: LEFT_SET_TIME,\n        payload: {day: numToDay[i], hour, count} })\n        // 'name''lat''lng''dir'\n        for (k=0;k<1;k++) {\n          let out = data[i][j].slice(k, k+8)\n          yield put({type: GET_POSITIONS_SUCCESS, payload: {positions: out}});\n          yield put({type: SET_SLIDER_VALUE, payload: {val: i*24+indexToHour[j], looping: true}})\n          yield delay(3000);\n        }\n      }\n      j=0;\n    }\n    yield put({type: SET_SLIDER_VALUE, payload: {val: i*24 - 1, looping: false}})\n}\n\nexport function* watchPollHour() {\n  yield takeLatest(SET_SLIDER_VALUE_ONCE, pollHour);\n}\n\n// single entry point to start all Sagas at once\nexport default function* rootSaga() {\n  yield all([\n    // call(pollPositions),\n    // call(pollPositionsWalker),\n    // call(pollHours),\n    call(watchPollHour),\n    call(pollHour),\n  ])\n}\n\n/*\nexport function* watchIncrementAsync() {\n  yield takeEvery('INCREMENT_ASYNC', incrementAsync);\n}\n\nexport function* getPositions(action) {\n  yield delay(1000);\n  yield put({type: GET_POSITIONS_SUCCESS, positions: positions[action.payload.iter]});\n}\n\nexport function* getPositionsAsync() {\n  yield takeEvery(GET_POSITIONS, getPositions);\n}\n\nexport function* pollPositionsAsync() {\n  yield take(POLL_POSITIONS, getPositions);\n}\n*/\n","import { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./reducers\";\nimport createSagaMiddleware from 'redux-saga';\nimport sagas from './sagas/GMapSaga';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(sagaMiddleware)\n);\n\nsagaMiddleware.run(sagas);\n\nexport default store;\n","import { GET_POSITIONS,\n         GET_POSITIONS_SUCCESS,\n         POLL_POSITIONS,\n         GET_POSITIONS_HOUR_SUCCESS,\n         GET_POSITIONS_HOUR,\n         SET_SLIDER_VALUE_ONCE,\n         LEFT_SET_TIME } from \"./actionsTypes\";\n\nlet iter = 0;\n\nexport const getPositions = () => ({\n  type: GET_POSITIONS,\n  payload: {\n    iter: ++iter\n  }\n})\n\nexport const getPositionsSuccess = (markers) => ({\n  type: GET_POSITIONS_SUCCESS,\n  payload: {\n    markers\n  }\n})\n\nexport const pollPositions = () => ({\n  type: POLL_POSITIONS,\n  payload: {}\n})\n\nexport const setTime = (time) => ({\n  type: LEFT_SET_TIME,\n  payload: time\n})\n\nexport const getPositionsHour = () => ({\n  type: GET_POSITIONS_HOUR,\n  payload: {\n    iter: ++iter\n  }\n})\n\nexport const getPositionsHourSuccess = (markers) => ({\n  type: GET_POSITIONS_HOUR_SUCCESS,\n  payload: {\n    markers\n  }\n})\n\nexport const setSliderValueOnce = (val, looping) => {\n  if (5 <= (val % 24) && 12 >= (val % 24)) {\n    val = val - (val % 24) + 4;\n  } else if (12 < (val % 24) && 20 >= (val % 24)) {\n    val = val - (val % 24) + 21;\n  }\n  return {\n    type: SET_SLIDER_VALUE_ONCE,\n    payload: {\n      looping,\n      val\n    }\n  }\n}\n\nexport const startLoop = (val, looping) => {\n  //console.log(val);\n  if (val >= 7*24 - 1){\n    val = 0;\n  } else if (5 <= (val % 24) && 12 >= (val % 24)) {\n    val = val - (val % 24) + 4;\n  } else if (12 < (val % 24) && 20 >= (val % 24)) {\n    val = val - (val % 24) + 21;\n  }\n  return {\n    type: SET_SLIDER_VALUE_ONCE,\n    payload: {\n      looping,\n      val\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport { Map, Marker, InfoWindow, GoogleApiWrapper } from 'google-maps-react';\nimport {Button} from 'semantic-ui-react';\nimport redDotN from './red-dot-n.png'\nimport redDotNE from './red-dot-ne.png'\nimport redDotNW from './red-dot-nw.png'\nimport redDotS from './red-dot-s.png'\nimport redDotSE from './red-dot-se.png'\nimport redDotSW from './red-dot-sw.png'\nimport redDotE from './red-dot-e.png'\nimport redDotW from './red-dot-w.png'\n\nclass GMap extends Component {\n\n  dirs = {\n    'n': redDotN,\n    'ne': redDotNE,\n    'nw': redDotNW,\n    's': redDotS,\n    'se': redDotSE,\n    'sw': redDotSW,\n    'e': redDotE,\n    'w': redDotW\n  };\n\n  mapStyle = [\n    {elementType: 'geometry', stylers: [{color: '#242f3e'}]},\n    {elementType: 'labels.text.stroke', stylers: [{color: '#242f3e'}]},\n    {elementType: 'labels.text.fill', stylers: [{color: '#746855'}]},\n    {\n      featureType: 'administrative.locality',\n      elementType: 'labels.text.fill',\n      stylers: [{color: '#d59563'}]\n    },\n    {\n      featureType: 'poi',\n      elementType: 'labels.text.fill',\n      stylers: [{color: '#d59563'}]\n    },\n    {\n      featureType: 'poi.park',\n      elementType: 'geometry',\n      stylers: [{color: '#263c3f'}]\n    },\n    {\n      featureType: 'poi.park',\n      elementType: 'labels.text.fill',\n      stylers: [{color: '#6b9a76'}]\n    },\n    {\n      featureType: 'road',\n      elementType: 'geometry',\n      stylers: [{color: '#38414e'}]\n    },\n    {\n      featureType: 'road',\n      elementType: 'geometry.stroke',\n      stylers: [{color: '#212a37'}]\n    },\n    {\n      featureType: 'road',\n      elementType: 'labels.text.fill',\n      stylers: [{color: '#9ca5b3'}]\n    },\n    {\n      featureType: 'road.highway',\n      elementType: 'geometry',\n      stylers: [{color: '#746855'}]\n    },\n    {\n      featureType: 'road.highway',\n      elementType: 'geometry.stroke',\n      stylers: [{color: '#1f2835'}]\n    },\n    {\n      featureType: 'road.highway',\n      elementType: 'labels.text.fill',\n      stylers: [{color: '#f3d19c'}]\n    },\n    {\n      featureType: 'transit',\n      elementType: 'geometry',\n      stylers: [{color: '#2f3948'}]\n    },\n    {\n      featureType: 'transit.station',\n      elementType: 'labels.text.fill',\n      stylers: [{color: '#d59563'}]\n    },\n    {\n      featureType: 'water',\n      elementType: 'geometry',\n      stylers: [{color: '#17263c'}]\n    },\n    {\n      featureType: 'water',\n      elementType: 'labels.text.fill',\n      stylers: [{color: '#515c6d'}]\n    },\n    {\n      featureType: 'water',\n      elementType: 'labels.text.stroke',\n      stylers: [{color: '#17263c'}]\n    }\n  ];\n\n  _mapLoaded = (mapProps, map) => {\n    map.setOptions({\n      styles: this.mapStyle\n    });\n  }\n\n  state = {\n    showingInfoWindow: false, // Hides or the shows the infoWindow\n    activeMarker: {},         // Shows the active marker upon click\n    selectedPlace: {},        // Shows the infoWindow to the selected place upon a marker\n    selectedPed: {}\n  };\n\n  //componentDidMount = () => {\n  //  let { polling } = this.props;\n  //  if (!polling) {\n  //    this.props.pollPositions();\n  //  }\n  //}\n\n  onMarkerClick = (props, marker, e, ped) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true,\n      selectedPed: ped\n  });\n\n  onClose = props => {\n    //console.log(this.state.activeMarker);\n    //console.log(this.state.selectedPlace);\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  createMarker = (lname, llat, llng, dir, position) => {\n    return (\n      <Marker\n        onClick={(props, marker, e) => this.onMarkerClick(props, marker, e, position)}\n        icon={{\n          url: this.dirs[dir],\n          scaledSize: {width: 80, height: 80},\n          anchor: {x: 40, y: 40}\n        }}\n        name={lname}\n        key={lname}\n        position={{\n          lat: llat,\n          lng: llng\n        }}\n      />\n    );\n  }\n\n  createMarkers = (positions) => {\n    let markers = [];\n    //let positions = [{name: \"Sim's Marker\", lat: 32.717572, lng: -117.16662},\n    //                 {name: \"Jim's Marker\", lat: 32.713574, lng: -117.16564}];\n    for (const position of positions) {\n      markers.push(this.createMarker(position.name, position.lat, position.lng, position.dir, position));\n    }\n\n    return markers;\n  }\n\n/*\ndefaultOptions={{\n  disableDefaultUI: true, // disable default map UI\n  draggable: true, // make map draggable\n  keyboardShortcuts: false, // disable keyboard shortcuts\n  scaleControl: true, // allow scale controle\n  scrollwheel: true, // allow scroll wheel\n  styles: this.styles // change default map styles\n}}\n*/\n  render() {\n    return (\n      <div className=\"mapContainer\" style={{height: '90vh', width: '100%'}}>\n      <Map\n        google={this.props.google}\n        zoom={14}\n        initialCenter={{\n          lat: 32.717572,\n          lng: -117.16662\n        }}\n        style={{height: '90vh', width: '100%'}}\n        onReady={(mapProps, map) => this._mapLoaded(mapProps, map)}\n      >\n        {this.createMarkers(this.props.positions)}\n        <InfoWindow\n          marker={this.state.activeMarker}\n          visible={this.state.showingInfoWindow}\n          onClose={this.onClose}\n          className={'infoWindow'}\n        >\n          <h4>ID: {this.state.selectedPlace.name}</h4>\n          <p>\n            A person was recently spotted here\n            {this.state.selectedPed.time ? ' at '+this.state.selectedPed.time[3] : ''}\n          </p>\n          <Button color='red'>Get Directions</Button>\n          <Button color='blue'>Call Dibs (PRO)</Button>\n        </InfoWindow>\n      </Map>\n      </div>\n    )\n  }\n}\n\n\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyDSbG1MQEsStL9XflSr-NVuhwzE3ibsDyI'\n})(GMap);\n","import { connect } from \"react-redux\";\nimport GMap from \"./GMap\";\nimport { getPositions, pollPositions } from \"../../redux/actions\";\n\nconst mapStateToProps = state => {\n  const { GMap } = state;\n  const positions = GMap.positions;\n  const polling = GMap.polling;\n  return { positions, polling };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  getPositions: () => dispatch(getPositions()),\n  pollPositions: () => dispatch(pollPositions()),\n})\n\n// export default TodoList;\nexport default connect(mapStateToProps, mapDispatchToProps)(GMap);\n","import React, { Component } from 'react';\nimport {Grid, Button, Image, Header, Icon} from 'semantic-ui-react';\nimport title from '../../title.png';\n\nclass LeftColumn extends Component {\n\n  render() {\n    return (\n      <Grid.Column style={{paddingRight: 0}} verticalAlign={'middle'} centered width={4}>\n        <div className='redoTime'>\n          <Button icon color='black' onClick={() => this.props.continueTicking(this.props.sliderValue, !this.props.looping)}>\n            <Icon name={this.props.looping ? 'pause': 'play'} color='red'/>\n          </Button>\n        </div> : null\n        <br/>\n        <div className={'controlInfo'}>\n        <Header textAlign='center' style={{marginBottom: 0}}>\n          <span style={{'color': 'white'}}>{this.props.day} </span>\n          <span style={{'color': 'red'}}>{this.props.hour}</span>\n        </Header>\n        <p style={{'color': 'white', 'textAlign': 'center'}}>\n          total count: {this.props.count}\n        </p>\n        </div>\n        <br/>\n        <br/>\n        <br/>\n        {/*<Header style={{'fontSize': 'calc(24px + (26 - 14) * ((100vw - 300px) / (1600 - 300)))'}}\n                textAlign=\"center\"\n                inverted\n        >\n          <span style={{'color': 'white'}}>SOME</span>\n          <span style={{'color': 'red'}}>ONE </span>\n          <span style={{'color': 'white'}}>WALKS HOME ALONE AT NIGHT</span>\n        </Header>*/}\n        <Image src={title}/>\n        <p style={{'color': 'white', 'textAlign': 'center'}}>\n          <i>a different kind of 9 to 5</i>\n        </p>\n        <br/>\n        <br/>\n        <br/>\n      </Grid.Column>\n    )\n  }\n}\n\nexport default LeftColumn;\n","import { connect } from \"react-redux\";\nimport LeftColumn from \"./LeftColumn\";\nimport { startLoop } from \"../../redux/actions\";\n\nconst mapStateToProps = state => {\n  const { GMap } = state;\n  const day = GMap.day;\n  const hour = GMap.hour;\n  const count = GMap.count;\n  const sliderValue = GMap.sliderValue;\n  const looping = GMap.looping;\n  return { day, hour, count, sliderValue, looping };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  continueTicking: (val, looping) => dispatch(startLoop(val, looping))\n})\n\n// export default TodoList;\nexport default connect(mapStateToProps, mapDispatchToProps)(LeftColumn);\n","import React, { Component } from 'react';\nimport {Grid, Header, Segment} from 'semantic-ui-react';\nimport { Slider } from \"react-semantic-ui-range\";\n\nclass TopControl extends Component {\n\n  render() {\n    return (\n      <Grid.Row columns={2} style={{height: '20%'}}>\n        <Grid.Column width={4} style={{'height': 'fit-content'}}>\n            <Grid.Row>\n              <Header style={{'fontSize': 'calc(24px + (26 - 14) * ((100vw - 300px) / (1600 - 300)))', 'paddingBottom': '0'}}\n                      textAlign=\"center\"\n                      inverted\n              >\n                <span style={{'color': 'red'}}>SOME</span>\n                <span style={{'color': 'white'}}>ONE </span>\n                <span style={{'color': 'red'}}>WALKS HOME ALONE AT NIGHT</span>\n              </Header>\n            </Grid.Row>\n            <Grid.Row width={16}>\n              <p style={{'color': 'white', 'textAlign': 'center'}}>\n                <i>a different kind of 9 to 5</i>\n              </p>\n            </Grid.Row>\n        </Grid.Column>\n        <Grid.Column width={12}>\n          <Header textAlign='center' style={{marginBottom: 0, paddingTop: 20}}>\n            <span style={{'color': 'white'}}>{this.props.day} </span>\n            <span style={{'color': 'red'}}>{this.props.hour}</span>\n          </Header>\n          <p style={{'color': 'white', 'textAlign': 'center'}}>\n            total count: {this.props.count}\n          </p>\n          <Grid.Row columns={7}>\n            <Slider color=\"red\" style={{'.semantic_ui_range_inner > div:firstchild': {'backgroundColor': 'white'}}}/>\n            <Segment.Group horizontal style={{marginTop: 0, backgroundColor: 'black', color: 'white'}}>\n              <Segment inverted style={{paddingTop: 5}}>Mon</Segment>\n              <Segment inverted style={{paddingTop: 5}}>Tue</Segment>\n              <Segment inverted style={{paddingTop: 5}}>Wed</Segment>\n              <Segment inverted style={{paddingTop: 5}}>Thu</Segment>\n              <Segment inverted style={{paddingTop: 5}}>Fri</Segment>\n              <Segment inverted style={{paddingTop: 5}}>Sat</Segment>\n              <Segment inverted style={{paddingTop: 5}}>Sun</Segment>\n            </Segment.Group>\n          </Grid.Row>\n        </Grid.Column>\n      </Grid.Row>\n    )\n  }\n}\n\nexport default TopControl;\n","import React, { Component } from 'react';\nimport {Grid, Segment} from 'semantic-ui-react';\nimport { Slider } from \"react-semantic-ui-range\";\nimport GMap from '../Map';\n\nclass RightControl extends Component {\n\n  /*\n  state = {\n    value: 0\n  };\n\n  FUCK YEAH MATH\n  Day, Hour\n  7, 24\n  7 * 24 = 168\n  valid times:\n    12AM to 5AM? -> 0 <= n % 24 and 4 >= n % 24\n      5AM to 12PM -> drop to 4AM\n    8PM to 12AM  -> 20 <= n % 24 and 23 >= n % 24\n      12PM to 8PM -> jump to 8PM\n  setValue = (val) => {\n    // if (0 <= (val % 24) && 4 >= (val % 24)) || (20 <= (val % 24) && 23 >= (val % 24)) {\n    if (5 <= (val % 24) && 12 >= (val % 24)) {\n      val = val - (val % 24) + 4;\n    } else if (12 < (val % 24) && 20 >= (val % 24)) {\n      val = val - (val % 24) + 20;\n    }\n    console.log(val);\n    this.setState({\n      value: val\n    });\n  };\n  */\n\n  settings = {\n    start: 0,\n    min: 0,\n    max: 167,\n    step: 1,\n    onChange: value => {\n      //{console.log('on change');\n      this.props.setSliderValue(value);\n    }\n  };\n\n  render() {\n    //console.log('sliderval at render', this.props.sliderValue, this.props.parity);\n    return (\n        <div style={{height: '100vh'}}>\n          <Grid.Row className='timeline' columns={7}>\n            <br/>\n            <Slider parity={this.props.parity} value={this.props.sliderValue} color=\"red\" settings={this.settings}/>\n            <Segment.Group horizontal style={{margin: 0, backgroundColor: 'black', color: 'white'}}>\n              <Segment inverted style={{paddingTop: 5, textAlign: 'center', borderLeft: '1px solid white'}}>Mon</Segment>\n              <Segment inverted style={{paddingTop: 5, textAlign: 'center', borderLeft: '1px solid white'}}>Tue</Segment>\n              <Segment inverted style={{paddingTop: 5, textAlign: 'center', borderLeft: '1px solid white'}}>Wed</Segment>\n              <Segment inverted style={{paddingTop: 5, textAlign: 'center', borderLeft: '1px solid white'}}>Thu</Segment>\n              <Segment inverted style={{paddingTop: 5, textAlign: 'center', borderLeft: '1px solid white'}}>Fri</Segment>\n              <Segment inverted style={{paddingTop: 5, textAlign: 'center', borderLeft: '1px solid white'}}>Sat</Segment>\n              <Segment inverted style={{paddingTop: 5, textAlign: 'center', borderLeft: '1px solid white', borderRight: '1px solid white'}}>Sun</Segment>\n            </Segment.Group>\n          </Grid.Row>\n          <div style={{height: '90vh'}}>\n          <GMap/>\n          </div>\n        </div>\n    )\n  }\n}\n\nexport default RightControl;\n","import { connect } from \"react-redux\";\nimport TopControl from \"./TopControl\";\n// import { getPositions, pollPositions } from \"../../redux/actions\";\n\nconst mapStateToProps = state => {\n  const { GMap } = state;\n  const day = GMap.day;\n  const hour = GMap.hour;\n  const count = GMap.count;\n  return { day, hour, count };\n};\n\nconst mapDispatchToProps = dispatch => ({\n})\n\n// export default TodoList;\nexport default connect(mapStateToProps, mapDispatchToProps)(TopControl);\n","import { connect } from \"react-redux\";\nimport { setSliderValueOnce } from '../../redux/actions';\nimport RightControl from \"./RightControl\";\n\n// import { getPositions, pollPositions } from \"../../redux/actions\";\n\nconst mapStateToProps = state => {\n  const { GMap } = state;\n  const sliderValue = GMap.sliderValue;\n  const day = GMap.day;\n  const hour = GMap.hour;\n  const count = GMap.count;\n  const parity = GMap.parity;\n  return { day, hour, count, sliderValue, parity };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setSliderValue: (val) => dispatch(setSliderValueOnce(val, false))\n})\n\n// export default TodoList;\nexport default connect(mapStateToProps, mapDispatchToProps)(RightControl);\n","import React, {Component} from 'react';\nimport GMap from './Components/Map';\nimport LeftColumn from './Components/LeftColumn';\nimport TopControl from './Components/TopControl';\nimport RightControl from './Components/RightControl';\nimport Tour from 'reactour'\nimport {Grid} from 'semantic-ui-react';\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css';\n\nclass App extends Component {\n  state = {\n    isTourOpen: true\n  };\n\n  closeTour = () => {\n    this.props.onDismiss();\n    this.setState({\n      isTourOpen: false\n    })\n  }\n\n\n  render() {\n    let row = false;\n    return (\n      <Grid centered style={{height: '100vh', 'backgroundColor': 'black'}}>\n      { row ? <TopControl/> : <LeftColumn/> }\n      {\n        row ?\n        <Grid.Row style={{height: '80%', paddingBottom: 0}}>\n        <Grid.Column width={16}>\n        {/*<Image src={border} floated='left' style={{'z-index': '100000000', 'height': '95vh'}}/>*/}\n        <GMap/>\n        </Grid.Column>\n        </Grid.Row>\n        :\n        <Grid.Column width={12}>\n        <RightControl/>\n        </Grid.Column>\n      }\n      <Tour\n      steps={steps}\n      isOpen={this.state.isTourOpen}\n      onRequestClose={this.closeTour}\n      />\n      </Grid>\n    );\n  }\n}\n\nconst steps = [\n  {\n    selector: '.timeline',\n    content: 'You can move the slider to view data throughout the week. Try clicking and dragging above \"Wed\".'\n  },\n  {\n    selector: '.mapContainer',\n    content: 'Try clicking any of the red dots. Each one symbolizes a person that was spotted at that position by a camera. This information is precise to the second.'\n  },\n  {\n    selector: '.controlInfo',\n    content: 'Only a few of the total people seen are shown on the map. You can see complete number of people spotted during the hour here.'\n  },\n  {\n    selector: '.redoTime',\n    content: 'Any time the time ticking is paused, you can click here to continue or restart it.'\n  }\n]\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from \"./redux/store\";\nimport {startLoop} from './redux/actions'\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}> <App onDismiss={() => store.dispatch(startLoop(0, true))}style={{'backgroundColor': 'black'}}/> </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}